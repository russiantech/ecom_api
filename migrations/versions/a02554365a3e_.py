"""empty message

Revision ID: a02554365a3e
Revises: 
Create Date: 2024-06-22 04:54:02.365365

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = 'a02554365a3e'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('groups',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('pages',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('desc', sa.Text(), nullable=True),
    sa.Column('avater', sa.String(length=1000), nullable=True),
    sa.Column('socials', sa.JSON(), nullable=True),
    sa.Column('location', sa.JSON(), nullable=True),
    sa.Column('contact', sa.JSON(), nullable=True),
    sa.Column('bank', sa.JSON(), nullable=True),
    sa.Column('password', sa.String(length=500), nullable=False),
    sa.Column('reviews', sa.Integer(), nullable=True),
    sa.Column('deleted_at', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('pages', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_pages_password'), ['password'], unique=False)

    op.create_table('baskets',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('deleted_at', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('chats',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('text', sa.String(length=140), nullable=True),
    sa.Column('media', sa.String(length=140), nullable=True),
    sa.Column('sticker', sa.String(length=140), nullable=True),
    sa.Column('last_seen', sa.DateTime(timezone=True), nullable=True),
    sa.Column('fro_del', sa.Boolean(), nullable=False),
    sa.Column('to_del', sa.Boolean(), nullable=False),
    sa.Column('deleted', sa.Boolean(), nullable=True),
    sa.Column('created', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated', sa.DateTime(timezone=True), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.CheckConstraint('text IS NOT NULL OR sticker IS NOT NULL OR media IS NOT NULL', name='at_least_one_content_check'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('products_pages',
    sa.Column('page_id', sa.Integer(), nullable=True),
    sa.Column('product_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['page_id'], ['pages.id'], ),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], )
    )
    op.create_table('products_users',
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('product_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], )
    )
    op.create_table('user_group',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('group_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['group_id'], ['groups.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'group_id')
    )
    op.create_table('users_pages',
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('page_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['page_id'], ['pages.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], )
    )
    op.create_table('chatrecipients',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('chat_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['chat_id'], ['chats.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('categories', schema=None) as batch_op:
        batch_op.add_column(sa.Column('parent_id', sa.Integer(), nullable=True))
        batch_op.create_foreign_key(None, 'categories', ['parent_id'], ['id'])

    with op.batch_alter_table('products', schema=None) as batch_op:
        batch_op.add_column(sa.Column('currency', sa.String(length=50), nullable=True))
        batch_op.add_column(sa.Column('pay_interval', sa.String(length=50), nullable=True))
        batch_op.add_column(sa.Column('negotiable', sa.Boolean(), nullable=True))
        batch_op.add_column(sa.Column('product_type', sa.String(length=50), nullable=False))
        batch_op.add_column(sa.Column('product_brand', sa.String(length=50), nullable=True))
        batch_op.add_column(sa.Column('condition', sa.String(length=50), nullable=True))
        batch_op.add_column(sa.Column('ip', sa.String(length=50), nullable=True))
        batch_op.add_column(sa.Column('meet_up', sa.JSON(), nullable=True))
        batch_op.add_column(sa.Column('availability', sa.String(length=50), nullable=True))
        batch_op.add_column(sa.Column('company', sa.String(length=50), nullable=True))
        batch_op.add_column(sa.Column('sku', sa.String(length=1000), nullable=True))
        batch_op.add_column(sa.Column('discount', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('color', sa.JSON(), nullable=True))
        batch_op.add_column(sa.Column('size', sa.JSON(), nullable=True))
        batch_op.add_column(sa.Column('property_size', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('bedrooms', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('bathrooms', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('property_for', sa.String(length=50), nullable=True))
        batch_op.add_column(sa.Column('amenities', sa.JSON(), nullable=True))
        batch_op.add_column(sa.Column('date_available', sa.DateTime(timezone=True), nullable=True))
        batch_op.add_column(sa.Column('fuel_type', sa.String(length=50), nullable=True))
        batch_op.add_column(sa.Column('make', sa.String(length=50), nullable=True))
        batch_op.add_column(sa.Column('model', sa.String(length=50), nullable=True))
        batch_op.add_column(sa.Column('year', sa.String(length=50), nullable=True))
        batch_op.add_column(sa.Column('job_level', sa.String(length=50), nullable=True))
        batch_op.add_column(sa.Column('min_experience', sa.String(length=50), nullable=True))
        batch_op.add_column(sa.Column('min_qualify', sa.String(length=50), nullable=True))
        batch_op.add_column(sa.Column('pay_range', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('responsibilities', sa.String(length=50), nullable=True))
        batch_op.add_column(sa.Column('required_skills', sa.String(length=50), nullable=True))
        batch_op.add_column(sa.Column('job_setup', sa.String(length=50), nullable=True))
        batch_op.add_column(sa.Column('location', sa.JSON(), nullable=True))
        batch_op.add_column(sa.Column('contact', sa.JSON(), nullable=True))
        batch_op.add_column(sa.Column('is_active', sa.Boolean(), nullable=True))
        batch_op.add_column(sa.Column('deleted', sa.Boolean(), nullable=True))
        batch_op.create_unique_constraint(None, ['sku'])

    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.alter_column('phone',
               existing_type=mysql.VARCHAR(length=120),
               nullable=True)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.alter_column('phone',
               existing_type=mysql.VARCHAR(length=120),
               nullable=False)

    with op.batch_alter_table('products', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='unique')
        batch_op.drop_column('deleted')
        batch_op.drop_column('is_active')
        batch_op.drop_column('contact')
        batch_op.drop_column('location')
        batch_op.drop_column('job_setup')
        batch_op.drop_column('required_skills')
        batch_op.drop_column('responsibilities')
        batch_op.drop_column('pay_range')
        batch_op.drop_column('min_qualify')
        batch_op.drop_column('min_experience')
        batch_op.drop_column('job_level')
        batch_op.drop_column('year')
        batch_op.drop_column('model')
        batch_op.drop_column('make')
        batch_op.drop_column('fuel_type')
        batch_op.drop_column('date_available')
        batch_op.drop_column('amenities')
        batch_op.drop_column('property_for')
        batch_op.drop_column('bathrooms')
        batch_op.drop_column('bedrooms')
        batch_op.drop_column('property_size')
        batch_op.drop_column('size')
        batch_op.drop_column('color')
        batch_op.drop_column('discount')
        batch_op.drop_column('sku')
        batch_op.drop_column('company')
        batch_op.drop_column('availability')
        batch_op.drop_column('meet_up')
        batch_op.drop_column('ip')
        batch_op.drop_column('condition')
        batch_op.drop_column('product_brand')
        batch_op.drop_column('product_type')
        batch_op.drop_column('negotiable')
        batch_op.drop_column('pay_interval')
        batch_op.drop_column('currency')

    with op.batch_alter_table('categories', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_column('parent_id')

    op.drop_table('chatrecipients')
    op.drop_table('users_pages')
    op.drop_table('user_group')
    op.drop_table('products_users')
    op.drop_table('products_pages')
    op.drop_table('chats')
    op.drop_table('baskets')
    with op.batch_alter_table('pages', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_pages_password'))

    op.drop_table('pages')
    op.drop_table('groups')
    # ### end Alembic commands ###
